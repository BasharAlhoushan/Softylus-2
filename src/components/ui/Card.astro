---
export interface Props {
  title?: string;
  subtitle?: string;
  description?: string;
  image?: string;
  imageAlt?: string;
  link?: {
    text: string;
    url: string;
  };
  badge?: string;
  variant?: 'default' | 'bordered' | 'minimal';
  aspectRatio?: '1:1' | '4:3' | '16:9';
  class?: string;
  animation?: {
    enabled: boolean;
    delay?: number;
  };
}

const { 
  title, 
  subtitle, 
  description, 
  image, 
  imageAlt = '',
  link,
  badge,
  variant = 'default',
  aspectRatio = '4:3',
  class: className = '',
  animation = { enabled: true }
} = Astro.props;

// Dynamic classes based on variant
const variantClasses = {
  default: 'bg-white shadow-md hover:shadow-xl',
  bordered: 'bg-white border border-gray-200 hover:border-gray-300',
  minimal: 'bg-transparent'
};

// Aspect ratio classes
const aspectRatioClasses = {
  '1:1': 'aspect-square',
  '4:3': 'aspect-[4/3]',
  '16:9': 'aspect-[16/9]'
};
---

<div 
  class={`card transition-all duration-300 overflow-hidden ${variantClasses[variant]} ${className}`}
  data-aos={animation.enabled ? "fade-up" : null}
  data-aos-delay={animation.delay || null}
>
  {image && (
    <div class={`${aspectRatioClasses[aspectRatio]} overflow-hidden`}>
      <img 
        src={image} 
        alt={imageAlt} 
        class="w-full h-full object-cover transition-transform duration-700 hover:scale-105"
      />
    </div>
  )}
  <div class="p-6">
    {badge && (
      <div class="mb-2">
        <span class="inline-block px-2 py-1 text-xs font-medium bg-gray-100 rounded-md">{badge}</span>
      </div>
    )}
    {subtitle && (
      <div class="text-sm text-gray-500 mb-1 uppercase tracking-wide">{subtitle}</div>
    )}
    {title && (
      <h3 class="text-xl font-bold mb-2">{title}</h3>
    )}
    {description && (
      <p class="text-gray-600 mb-4">{description}</p>
    )}
    {link && (
      <a href={link.url} class="inline-flex items-center text-black font-medium hover:underline">
        {link.text}
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-1 transform transition-transform group-hover:translate-x-1" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
        </svg>
      </a>
    )}
    <slot />
  </div>
</div>